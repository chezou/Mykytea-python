name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'
      
      - name: Prepare for macOS
        if: runner.os == 'macOS'
        run: brew install autoconf automake libtool
      
      - name: Prepare kytea for windows
        if: runner.os == 'Windows'
        run: |
          appveyor DownloadFile https://github.com/chezou/kytea/releases/download/0.4.7-3/kytea-win-x64.zip
          7z x kytea-win-x64.zip -okytea
          cp -r kytea\include include
          cp  kytea\lib\libkytea.lib lib\kytea\
      
      - name: Prepare kytea for Linux/macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          wget http://www.phontron.com/kytea/download/kytea-0.4.7.tar.gz
          tar zxf kytea-0.4.7.tar.gz
          pushd kytea-0.4.7
          autoreconf -i
          ./configure && make && sudo make install
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo ldconfig
          fi
          popd
          rm -r kytea-0.4.7
          swig -Wall -c++ -python -shadow -I/usr/local/include lib/kytea/mykytea.i


      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.2

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  # upload_pypi:
    # needs: [build_wheels, build_sdist]
    # runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    # steps:
      # - uses: actions/download-artifact@v2
        # with:
          # name: artifact
          # path: dist

      # - uses: pypa/gh-action-pypi-publish@v1.4.2
        # with:
          # user: __token__
          # password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
