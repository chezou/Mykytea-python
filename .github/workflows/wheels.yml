name: Build and upload to PyPI

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2016, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'
      
      - name: Prepare for Windows
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -OutFile kytea-win-x64.zip https://github.com/chezou/kytea/releases/download/0.4.7-3/kytea-win-x64.zip &&
          7z x kytea-win-x64.zip -okytea &&
          cp -r kytea\include include &&
          cp  kytea\lib\libkytea.lib lib\kytea\

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.2
        env:
          CIBW_SKIP: "cp36-* *-musllinux* *-i686* *-win32"
          CIBW_BEFORE_ALL_LINUX: >
            yum install -y wget &&
            wget http://www.phontron.com/kytea/download/kytea-0.4.7.tar.gz &&
            tar zxf kytea-0.4.7.tar.gz &&
            pushd kytea-0.4.7 &&
            autoreconf -i &&
            ./configure && make && make install &&
            ldconfig &&
            popd &&
            rm -r kytea-0.4.7 &&
            swig -Wall -c++ -python -shadow -I/usr/local/include lib/kytea/mykytea.i
          CIBW_BEFORE_ALL_MACOS: >
            brew install autoconf automake libtool &&
            wget http://www.phontron.com/kytea/download/kytea-0.4.7.tar.gz &&
            tar zxf kytea-0.4.7.tar.gz &&
            pushd kytea-0.4.7 &&
            autoreconf -i &&
            ./configure && make && make install &&
            popd &&
            rm -r kytea-0.4.7 &&
            swig -Wall -c++ -python -shadow -I/usr/local/include lib/kytea/mykytea.i

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.9'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
